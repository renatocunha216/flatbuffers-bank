#ifndef COMMON_READER_H
#define COMMON_READER_H

/* Generated by flatcc 0.6.1 FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif

typedef struct flatbuffers_DateTimeFbs flatbuffers_DateTimeFbs_t;
typedef const flatbuffers_DateTimeFbs_t *flatbuffers_DateTimeFbs_struct_t;
typedef flatbuffers_DateTimeFbs_t *flatbuffers_DateTimeFbs_mutable_struct_t;
typedef const flatbuffers_DateTimeFbs_t *flatbuffers_DateTimeFbs_vec_t;
typedef flatbuffers_DateTimeFbs_t *flatbuffers_DateTimeFbs_mutable_vec_t;

#ifndef flatbuffers_DateTimeFbs_file_identifier
#define flatbuffers_DateTimeFbs_file_identifier 0
#endif
/* deprecated, use flatbuffers_DateTimeFbs_file_identifier */
#ifndef flatbuffers_DateTimeFbs_identifier
#define flatbuffers_DateTimeFbs_identifier 0
#endif
#define flatbuffers_DateTimeFbs_type_hash ((flatbuffers_thash_t)0x544ac535)
#define flatbuffers_DateTimeFbs_type_identifier "\x35\xc5\x4a\x54"
#ifndef flatbuffers_DateTimeFbs_file_extension
#define flatbuffers_DateTimeFbs_file_extension "bin"
#endif


struct flatbuffers_DateTimeFbs {
    alignas(2) uint8_t day;
    alignas(1) uint8_t month;
    alignas(2) uint16_t year;
    alignas(1) uint8_t hour;
    alignas(1) uint8_t minute;
    alignas(1) uint8_t second;
};
static_assert(sizeof(flatbuffers_DateTimeFbs_t) == 8, "struct size mismatch");

static inline const flatbuffers_DateTimeFbs_t *flatbuffers_DateTimeFbs__const_ptr_add(const flatbuffers_DateTimeFbs_t *p, size_t i) { return p + i; }
static inline flatbuffers_DateTimeFbs_t *flatbuffers_DateTimeFbs__ptr_add(flatbuffers_DateTimeFbs_t *p, size_t i) { return p + i; }
static inline flatbuffers_DateTimeFbs_struct_t flatbuffers_DateTimeFbs_vec_at(flatbuffers_DateTimeFbs_vec_t vec, size_t i)
__flatbuffers_struct_vec_at(vec, i)
static inline size_t flatbuffers_DateTimeFbs__size(void) { return 8; }
static inline size_t flatbuffers_DateTimeFbs_vec_len(flatbuffers_DateTimeFbs_vec_t vec)
__flatbuffers_vec_len(vec)
__flatbuffers_struct_as_root(flatbuffers_DateTimeFbs)

__flatbuffers_define_struct_scalar_field(flatbuffers_DateTimeFbs, day, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(flatbuffers_DateTimeFbs, month, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(flatbuffers_DateTimeFbs, year, flatbuffers_uint16, uint16_t)
__flatbuffers_define_struct_scalar_field(flatbuffers_DateTimeFbs, hour, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(flatbuffers_DateTimeFbs, minute, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(flatbuffers_DateTimeFbs, second, flatbuffers_uint8, uint8_t)



#include "flatcc/flatcc_epilogue.h"
#endif /* COMMON_READER_H */
